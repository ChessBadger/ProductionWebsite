/* style.css */

body {
  font-family: "Inter", sans-serif;
  margin: 0;
  background: #f5f7fa;
  color: #2e3a59;
}

header {
  text-align: center;
  padding: 1rem 0;
  background: #fff;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
}

main {
  max-width: 1400px;
  margin: 1rem auto;
  padding: 0 1rem;
}

.pagination {
  display: flex;
  justify-content: center;
  align-items: center;
  gap: 1rem;
  margin-top: 1rem;
}
.pagination button {
  padding: 0.4rem 0.8rem;
  border: 1px solid #ccd0d5;
  background: #fff;
  border-radius: 4px;
}
.pagination button:disabled {
  opacity: 0.5;
  cursor: default;
}

.controls {
  display: flex;
  flex-wrap: wrap;
  gap: 1rem;
  margin-bottom: 1rem;
  align-items: center;
}

.controls label {
  display: flex;
  flex-direction: column;
  font-size: 0.9rem;
}

.controls input,
.controls select,
.controls button {
  padding: 0.5rem 0.75rem;
  border: 1px solid #ccd0d5;
  border-radius: 4px;
  font-size: 0.95rem;
  background: #fff;
}

.controls button {
  margin-top: 1.5rem;
  background: white;
  color: black;
  cursor: pointer;
  transition: background 0.2s;
}

/* Chart */
.chart-container {
  width: 100%;
  max-width: 800px;
  margin: 0 auto 2rem;
  background: #fff;
  padding: 1rem;
  border-radius: 8px;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
}

.table-container h2 {
  margin-top: 0;
  margin-bottom: 1rem;
  font-size: 1.2rem;
  border-bottom: 2px solid #e1e4eb;
  padding-bottom: 0.25rem;
}

table {
  width: 100%;
  border-collapse: collapse;
}

thead th {
  text-align: left;
  font-weight: 600;
  padding: 0.75rem;
  border-bottom: 2px solid #e1e4eb;
  position: sticky;
  top: 0;
  background: #fff;
}

tbody td {
  padding: 0.6rem 0.75rem;
  border-bottom: 1px solid #edf0f5;
}

th.sortable {
  cursor: pointer;
}

th.sortable::after {
  content: "";
  display: inline-block;
  margin-left: 0.5rem;
  border: 4px solid transparent;
  border-top-color: #999;
  opacity: 0.4;
  transform: translateY(-2px);
}

th.sortable.asc::after {
  border-top-color: transparent;
  border-bottom-color: #2e3a59;
  opacity: 1;
}

th.sortable.desc::after {
  border-top-color: #2e3a59;
  opacity: 1;
}

@media (max-width: 800px) {
  .controls {
    flex-direction: column;
    align-items: stretch;
  }
}

/* 1. Ensure containers are fluid */
.chart-container,
.table-container {
  width: 100%;
  margin: 0 auto 2rem;
  padding: 1rem;
}

/* 2. Make tables horizontally scrollable on small screens */
.table-container {
  overflow-x: auto;
}
.table-container table {
  min-width: 600px; /* or whatever your minimum columns need */
}

/* 3. Stack charts & tables in single column */
@media (max-width: 768px) {
  .chart-container,
  .table-container {
    padding: 0.75rem;
    margin-bottom: 1.5rem;
  }
}

/* 4. Collapse controls into two rows on tablet */
@media (max-width: 600px) {
  .controls {
    flex-direction: column;
    align-items: stretch;
  }
  .controls label,
  .controls button {
    width: 100%;
  }
  .controls button {
    margin: 1rem 0 0;
  }
}

/* 5. Further condense on phone: hide labels, use placeholders only */
@media (max-width: 400px) {
  .controls label {
    flex-direction: row;
    align-items: center;
    justify-content: space-between;
  }
  .controls label::before {
    content: attr(data-label);
    flex: 0 0 30%;
    font-size: 0.85rem;
    color: #555;
  }
  .controls label input,
  .controls label select {
    flex: 1;
  }
  /* if you want to hide static <label> text and rely solely on placeholder, you can: */
  .controls label > span {
    display: none;
  }
}

/* —————————————— */
/* Responsive tables on phones */
/* —————————————— */
@media (max-width: 600px) {
  .table-container {
    overflow-x: auto;
    -webkit-overflow-scrolling: touch; /* smooth scrolling on iOS */
  }

  /* make first column sticky */
  .responsive th:first-child,
  .responsive td:first-child {
    position: sticky;
    left: 0;
    /* match your bg color so it covers cells behind it */
    background-color: #fff;
    /* elevate above the other cells */
    z-index: 2;
  }

  /* if you have a header row and want it on top of the frozen cell */
  .responsive thead th:first-child {
    z-index: 3;
  }
}

/* 1) Global box‐sizing so padding doesn’t push containers past 100% */
*,
*::before,
*::after {
  box-sizing: border-box;
}

/* 2) Kill any page‐level horizontal scroll */
html,
body {
  margin: 0;
  padding: 0;
  overflow-x: hidden;
}

/* 3) Ensure table “cards” fill their container without extra padding overflow */
@media (max-width: 600px) {
  .table-container {
    /* if you’d like a bit of breathing room, you can reduce padding: */
    padding: 0.5rem;
  }

  #employee-trend-section {
    height: 300px;
  }

  .show-n {
    display: inline-flex;
    flex-direction: column;
    gap: 0.5rem;
    padding: 0.75rem;
  }

  /* Make the toggle row a 3‑col grid: “Top” • slider • “Bottom” */
  .show-n .toggle-wrapper {
    display: grid;
    grid-template-columns: auto auto auto;
    align-items: center;
    column-gap: 0.5rem;
    justify-content: center;
  }

  /* Fix the switch to a reasonable touch size */
  .show-n .toggle-wrapper .switch {
    width: 4rem;
    height: 1.5rem;
  }
  .show-n .toggle-wrapper .switch .slider {
    border-radius: 1rem;
  }

  /* Center & cap the width of the count input */
  .show-n input#count {
    width: 5ch;
    margin: 0 auto;
    box-sizing: border-box;
  }
}

.chart-container {
  width: 100%;
  max-width: none; /* let it fill the parent */
  margin: 0 auto 2rem;
  background: #fff;
  padding: 1rem;
  border-radius: 8px;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
}

.chart-container canvas {
  width: 100% !important;
  height: 100% !important;
}

#employee-trend-section {
  height: 700px;
}

.clickable-store,
.clickable-date {
  cursor: pointer;
  text-decoration: underline;
}

/* Toggle Switch */
.toggle-wrapper {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  justify-content: flex-end;
  margin-bottom: 0.75rem;
  font-size: 0.9rem;
}

.switch {
  position: relative;
  display: inline-block;
  width: 50px;
  height: 24px;
}

.switch input {
  opacity: 0;
  width: 0;
  height: 0;
}

.slider {
  position: absolute;
  cursor: pointer;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: #ccc;
  transition: 0.4s;
  border-radius: 24px;
}

.slider:before {
  position: absolute;
  content: "";
  height: 18px;
  width: 18px;
  left: 3px;
  bottom: 3px;
  background-color: white;
  transition: 0.4s;
  border-radius: 50%;
}

input:checked + .slider {
  background-color: #4caf50;
}

input:checked + .slider:before {
  transform: translateX(26px);
}

.toggle-wrapper.disabled {
  opacity: 0.5;
  pointer-events: none;
}

/* style.css */
.show-n {
  display: flex;
  align-items: center;
  gap: 1rem;
  padding: 0.5rem;
  border: 1px solid #ddd;
  border-radius: 6px;
}
.show-n legend {
  padding: 0 0.5rem;
  font-weight: bold;
}
.show-n label {
  white-space: nowrap;
}

/* only targets our count box inside the “Show” group */
.show-n input#count {
  height: 3ch;
  font-size: 16px;
  width: 7ch; /* ~ space for 3 digits plus a little padding */
  min-width: auto; /* override any browser default */
}
